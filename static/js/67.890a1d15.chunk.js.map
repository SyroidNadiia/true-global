{"version":3,"file":"static/js/67.890a1d15.chunk.js","mappings":"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","sources":["components/Input/Input.styled.ts","components/Input/Input.tsx","components/Button/Button.styled.ts","components/Button/Button.tsx","components/AuthForm/AuthForm.styled.ts","components/AuthForm/AuthForm.tsx","pages/Register.tsx","pages/sharedStyles.styled.tsx"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const InputStyled = styled.input`\r\n  width: calc(100%);\r\n  height: 49px;\r\n  padding: 14px 18px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  border-radius: 8px;\r\n\r\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\r\n  opacity: 0.4;\r\n\r\n  outline: none;\r\n  transition: all 150ms ease;\r\n\r\n  font-size: 14px;\r\n  letter-spacing: -0.28px;\r\n  font-family: inherit;\r\n  background: #fff;\r\n  border: 1px solid #5255bc;\r\n  color: #161616;\r\n  box-sizing: border-box;\r\n   &::placeholder {\r\n    font-size: 14px;\r\n    letter-spacing: -0.28px;\r\n    color: #161616;\r\n  }\r\n\r\n  &:focus {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const InputUnit = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n\r\n`;\r\n\r\nexport const PasswordWrapperIcon = styled.span`\r\n  width: 18px;\r\n  height: 18px;\r\n  position: absolute;\r\n  bottom: 15px;\r\n  right: 15px;\r\n  color: #161616;\r\n  opacity: 0.4;\r\n`;\r\n\r\n\r\n","import React, { useState, ChangeEvent, FocusEvent } from 'react';\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai';\n\nimport { InputStyled, InputUnit, PasswordWrapperIcon } from './Input.styled';\n\ninterface InputProps {\n  height?: string;\n  type: string;\n  name: string;\n  placeholder: string;\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  onBlur?: (event: FocusEvent<HTMLInputElement>) => void;\n  background?: string;\n  value?: string;\n}\n\nconst Input: React.FC<InputProps> = ({\n  height,\n  type,\n  name,\n  placeholder,\n  onChange,\n  onBlur,\n  ...rest\n}) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleTogglePassword = () => {\n    setShowPassword(prevShowPassword => !prevShowPassword);\n  };\n\n  return (\n    <>\n      {type === 'password' ? (\n        <InputUnit>\n          <InputStyled \n            type={showPassword ? 'text' : type}\n            name={name}\n            placeholder={placeholder}\n            onChange={onChange}\n           \n            {...rest}\n          />\n          <PasswordWrapperIcon onClick={handleTogglePassword}>\n            {showPassword ? (\n              <AiOutlineEye fill=\"#161616\" />\n            ) : (\n              <AiOutlineEyeInvisible fill=\"#161616\" />\n            )}\n          </PasswordWrapperIcon>\n        </InputUnit>\n      ) : (\n        <InputStyled\n          type={showPassword ? 'text' : type}\n          name={name}\n          placeholder={placeholder}\n          onChange={onChange}\n          \n          {...rest}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Input;\n\n","import styled from '@emotion/styled';\r\n\r\nexport const ButtonStyled = styled.button`\r\n  display: flex;\r\n  gap: 8px;\r\n  width: 100%;\r\n  padding: 14px 0;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  margin-top: 14px;\r\n\r\n  background-color: #5255bc;\r\n  color: #ffffff;\r\n\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  letter-spacing: -0.28px;\r\n  text-align: center;\r\n\r\n  &:hover {\r\n    background-color: #7b7ede;\r\n  }\r\n`;\r\n","import React, { ReactNode, MouseEvent } from 'react';\nimport { ButtonStyled } from './Button.styled';\n\ninterface ButtonProps {\n  children: ReactNode;\n  type?: 'button' | 'reset' | 'submit';\n  onClick?: (event: MouseEvent<HTMLButtonElement>) => void;\n  width?: string;\n  height?: string;\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  children,\n  type,\n  onClick,\n  width,\n  height,\n  ...rest\n}) => {\n  return (\n    <ButtonStyled\n      type={type}\n      onClick={onClick}\n      style={{ width, height }}\n      {...rest}\n    >\n      {children}\n    </ButtonStyled>\n  );\n};\n\nexport default Button;\n","import styled from '@emotion/styled';\n\nexport const AuthFormStyle = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  width: 450px;\n`;\n","import React, { useEffect } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Input from '../Input/Input';\nimport Button from '../Button/Button';\nimport { AuthFormStyle } from './AuthForm.styled';\nimport { register, logIn } from '../../redux/auth/operations';\n\nimport * as Notiflix from 'notiflix';\n\ninterface AuthFormProps {\n  isRegistration: boolean;\n}\n\ninterface AuthFormValues {\n  name?: string | null;\n  email: string;\n  password: string;\n}\n\nconst initialValues: AuthFormValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\n\n\nconst AuthForm: React.FC<AuthFormProps> = ({ isRegistration }) => {\n  const formDistributor = {\n    passText: isRegistration ? 'Create a password' : 'Confirm your password',\n    buttText: isRegistration ? 'Register Now' : 'Log in Now',\n  };\n\n  const authSchema = Yup.object().shape({\n  name: isRegistration ? Yup.string() : Yup.string().strip(),\n  email: Yup.string()\n    .required('Email is required')\n    .email('Invalid email address'),\n  password: Yup.string()\n    .required('Password is required')\n    .min(8, 'Password must be at least 8 characters long')\n    .matches(\n      /^(?=.*[A-Z])(?=.*[@#$%^&+=]).*$/,\n      'Password must contain at least one uppercase letter and one special character'\n    ),\n});\n\n  const { handleSubmit, handleChange, handleBlur, values, errors, touched } =\n    useFormik<AuthFormValues>({\n      initialValues: initialValues,\n      onSubmit: async ({ name, email, password }, { resetForm }) => {\n        try {\n          if (isRegistration) {\n            await register({ name, email, password });\n          }\n\n          await logIn({ email, password });\n\n          resetForm();\n        } catch (error: any) {\n          if (error.response && error.response.status === 409) {\n            console.error('User already exists:', error.message);\n            Notiflix.Notify.failure('User with this email already exists');\n          } else {\n            console.error('An error occurred:', error.message);\n            Notiflix.Notify.failure('An error occurred');\n          }\n        }\n      },\n      validationSchema: authSchema,\n    });\n\n  useEffect(() => {\n    if (isRegistration) {\n      // Скидання значень полів форми для реєстрації\n      values.name = initialValues.name;\n    }\n  }, [isRegistration, values]);\n\n  return (\n    <AuthFormStyle onSubmit={handleSubmit}>\n      {isRegistration && (\n        <Input\n          name=\"name\"\n          type=\"text\"\n          placeholder=\"Enter your name\"\n          onChange={handleChange}\n          onBlur={handleBlur}\n          value={values.name || ''}\n        />\n      )}\n      {isRegistration && errors.name && touched.name ? (\n        <span style={{ color: 'red' }}>{errors.name}</span>\n      ) : null}\n\n      <Input\n        name=\"email\"\n        type=\"email\"\n        placeholder=\"Enter your email\"\n        onChange={handleChange}\n        onBlur={handleBlur}\n        value={values.email}\n      />\n      {errors.email && touched.email ? (\n        <span style={{ color: 'red' }}>{errors.email}</span>\n      ) : null}\n\n      <Input\n        name=\"password\"\n        type=\"password\"\n        placeholder={formDistributor.passText}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        value={values.password}\n      />\n      {errors.password && touched.password ? (\n        <span style={{ color: 'red' }}>{errors.password}</span>\n      ) : null}\n\n      <Button type=\"submit\">{formDistributor.buttText}</Button>\n    </AuthFormStyle>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from 'components/AuthForm/AuthForm';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Typography } from '@mui/material';\r\nimport { StyledRegister } from './sharedStyles.styled';\r\n\r\nconst Register: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Register</title>\r\n      </Helmet>\r\n      <StyledRegister>\r\n        <Typography variant=\"h4\">Register</Typography>\r\n        <AuthForm isRegistration={true} />\r\n      </StyledRegister>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledHome = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 20px;\r\n  margin-top: 80px;\r\n`;\r\n\r\nexport const TaskImage = styled.img`\r\n  width: 400px;\r\n  height: 400px;\r\n`;\r\n\r\nexport const StyledRegister = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 20px;\r\n  margin-top: 70px;\r\n`;\r\n"],"names":["InputStyled","styled","input","_templateObject","_taggedTemplateLiteral","InputUnit","div","_templateObject2","PasswordWrapperIcon","span","_templateObject3","_ref","height","type","name","placeholder","onChange","rest","onBlur","_objectWithoutProperties","_excluded","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_jsx","_Fragment","children","_jsxs","_objectSpread","onClick","prevShowPassword","AiOutlineEye","fill","AiOutlineEyeInvisible","ButtonStyled","button","width","style","AuthFormStyle","form","initialValues","email","password","_onSubmit","isRegistration","formDistributor","passText","buttText","authSchema","Yup","shape","strip","required","min","matches","_useFormik","useFormik","onSubmit","_x","_x2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref2","_ref3","resetForm","wrap","_context","prev","next","register","logIn","t0","response","status","console","error","message","Notiflix","failure","stop","apply","arguments","validationSchema","handleSubmit","handleChange","handleBlur","values","errors","touched","useEffect","Input","value","color","Button","Helmet","StyledRegister","Typography","variant","AuthForm","StyledHome","TaskImage","img"],"sourceRoot":""}